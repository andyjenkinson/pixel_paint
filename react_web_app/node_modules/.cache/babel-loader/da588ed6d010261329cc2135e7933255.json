{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neythen/Desktop/Projects/LED_paint/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SketchPicker } from 'react-color';\n\nfunction range(start, stop, step) {\n  if (typeof stop == 'undefined') {\n    // one param defined\n    stop = start;\n    start = 0;\n  }\n\n  if (typeof step == 'undefined') {\n    step = 1;\n  }\n\n  if (step > 0 && start >= stop || step < 0 && start <= stop) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n    result.push(i);\n  }\n\n  return result;\n}\n\n;\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    style: {\n      background: props.value\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSquare = i => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: this.props.squares[i],\n        onClick: () => this.props.onClick(i)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderRow = (row, n_cols) => {\n      var indices = range(row * n_cols, (row + 1) * n_cols);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: indices.map(this.renderSquare)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  renderRows(n_rows, n_cols) {\n    var row_indices = range(0, n_rows);\n    let rr = this.renderRow;\n    return row_indices.map(function (row) {\n      return rr(row, n_cols);\n    });\n  }\n\n  render() {\n    let n_rows = this.props.n_rows;\n    let n_cols = this.props.n_cols;\n    return this.renderRows(n_rows, n_cols)\n    /*\n    <div>\n      <div className=\"board-row\">\n        {this.renderRow(0,10)}\n      </div>\n      <div className=\"board-row\">\n        {this.renderRow(0,10)}\n      </div>\n      <div className=\"board-row\">\n        {this.renderRow(0,10)}\n      </div>\n    </div>\n    */\n    ;\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.change_n_rows = event => {\n      this.setState({\n        n_rows: parseInt(event.target.value) ? parseInt(event.target.value) : 1\n        /*\n        history: [{\n          squares: Array(this.n_cols*parseInt(event.target.value)).fill(null),\n        }]\n        */\n\n      });\n    };\n\n    this.change_n_cols = event => {\n      this.setState({\n        n_cols: parseInt(event.target.value) ? parseInt(event.target.value) : 1\n        /*\n        history: [{\n          squares: Array(this.n_rows*event.target.value).fill(null),\n        }]\n        */\n\n      });\n    };\n\n    this.state = {\n      n_rows: 6,\n      n_cols: 9,\n      history: [{\n        squares: Array(16 * 16).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = \"#000000\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 == 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          n_rows: this.state.n_rows,\n          n_cols: this.state.n_cols,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Number of rows:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: this.change_n_rows\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Number of cols:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            onChange: this.change_n_cols\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SketchPicker, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 238,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/neythen/Desktop/Projects/LED_paint/src/index.js"],"names":["React","ReactDOM","SketchPicker","range","start","stop","step","result","i","push","Square","props","onClick","background","value","Board","Component","renderSquare","squares","renderRow","row","n_cols","indices","map","renderRows","n_rows","row_indices","rr","render","Game","constructor","change_n_rows","event","setState","parseInt","target","change_n_cols","state","history","Array","fill","stepNumber","xIsNext","handleClick","slice","current","length","calculateWinner","concat","jumpTo","winner","moves","move","desc","status","lines","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { SketchPicker } from 'react-color';\n\n\nfunction range(start, stop, step) {\n    if (typeof stop == 'undefined') {\n        // one param defined\n        stop = start;\n        start = 0;\n    }\n\n    if (typeof step == 'undefined') {\n        step = 1;\n    }\n\n    if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n        return [];\n    }\n\n    var result = [];\n    for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n        result.push(i);\n    }\n\n    return result;\n};\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick} style={{background:props.value}} >\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n\n  renderSquare = (i) => {\n    return (\n      <Square\n\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  renderRow = (row,n_cols) => {\n    var indices = range(row*n_cols, (row+1)*n_cols);\n\n    return (\n      <div className=\"board-row\">\n        {indices.map(this.renderSquare)}\n      </div>\n    )\n  }\n\n  renderRows(n_rows, n_cols){\n    var row_indices = range(0, n_rows);\n    let rr = this.renderRow;\n    return row_indices.map(\n      function(row) {return rr(row, n_cols)}\n    );\n\n  }\n\n  render() {\n\n    let n_rows = this.props.n_rows;\n    let n_cols = this.props.n_cols;\n    return (\n      this.renderRows(n_rows, n_cols)\n\n\n      /*\n      <div>\n        <div className=\"board-row\">\n          {this.renderRow(0,10)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderRow(0,10)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderRow(0,10)}\n        </div>\n      </div>\n      */\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      n_rows: 6,\n      n_cols: 9,\n      history: [{\n        squares: Array(16*16).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = \"#000000\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step%2) == 0,\n    });\n  }\n\n  change_n_rows = (event) => {\n    this.setState({\n      n_rows: parseInt(event.target.value) ? parseInt(event.target.value) : 1\n      /*\n      history: [{\n        squares: Array(this.n_cols*parseInt(event.target.value)).fill(null),\n      }]\n      */\n    });\n  }\n\n  change_n_cols = (event) => {\n    this.setState({\n      n_cols: parseInt(event.target.value) ? parseInt(event.target.value) : 1\n      /*\n      history: [{\n        squares: Array(this.n_rows*event.target.value).fill(null),\n      }]\n      */\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            n_rows={this.state.n_rows}\n            n_cols={this.state.n_cols}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n        <div>\n          <div>\n            Number of rows:\n            <input\n              type=\"number\"\n              onChange={this.change_n_rows}\n              />\n          </div>\n          <div>\n            Number of cols:\n            <input\n              type=\"number\"\n              onChange={this.change_n_cols}\n              />\n          </div>\n        </div>\n        <SketchPicker />\n      </div>\n\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}