{"ast":null,"code":"'use strict';\n\nvar bl = require('bl');\n\nvar inherits = require('inherits');\n\nvar EE = require('events').EventEmitter;\n\nvar Packet = require('./packet');\n\nvar constants = require('./constants');\n\nfunction Parser() {\n  if (!(this instanceof Parser)) return new Parser();\n  this._states = ['_parseHeader', '_parseLength', '_parsePayload', '_newPacket'];\n\n  this._resetState();\n}\n\ninherits(Parser, EE);\n\nParser.prototype._resetState = function () {\n  this.packet = new Packet();\n  this.error = null;\n  this._list = bl();\n  this._stateCounter = 0;\n};\n\nParser.prototype.parse = function (buf) {\n  if (this.error) this._resetState();\n\n  this._list.append(buf);\n\n  while ((this.packet.length !== -1 || this._list.length > 0) && this[this._states[this._stateCounter]]() && !this.error) {\n    this._stateCounter++;\n    if (this._stateCounter >= this._states.length) this._stateCounter = 0;\n  }\n\n  return this._list.length;\n};\n\nParser.prototype._parseHeader = function () {\n  // There is at least one byte in the buffer\n  var zero = this._list.readUInt8(0);\n\n  this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT];\n  this.packet.retain = (zero & constants.RETAIN_MASK) !== 0;\n  this.packet.qos = zero >> constants.QOS_SHIFT & constants.QOS_MASK;\n  this.packet.dup = (zero & constants.DUP_MASK) !== 0;\n\n  this._list.consume(1);\n\n  return true;\n};\n\nParser.prototype._parseLength = function () {\n  // There is at least one byte in the list\n  var bytes = 0;\n  var mul = 1;\n  var length = 0;\n  var result = true;\n  var current;\n\n  while (bytes < 5) {\n    current = this._list.readUInt8(bytes++);\n    length += mul * (current & constants.LENGTH_MASK);\n    mul *= 0x80;\n    if ((current & constants.LENGTH_FIN_MASK) === 0) break;\n\n    if (this._list.length <= bytes) {\n      result = false;\n      break;\n    }\n  }\n\n  if (result) {\n    this.packet.length = length;\n\n    this._list.consume(bytes);\n  }\n\n  return result;\n};\n\nParser.prototype._parsePayload = function () {\n  var result = false; // Do we have a payload? Do we have enough data to complete the payload?\n  // PINGs have no payload\n\n  if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n    this._pos = 0;\n\n    switch (this.packet.cmd) {\n      case 'connect':\n        this._parseConnect();\n\n        break;\n\n      case 'connack':\n        this._parseConnack();\n\n        break;\n\n      case 'publish':\n        this._parsePublish();\n\n        break;\n\n      case 'puback':\n      case 'pubrec':\n      case 'pubrel':\n      case 'pubcomp':\n        this._parseMessageId();\n\n        break;\n\n      case 'subscribe':\n        this._parseSubscribe();\n\n        break;\n\n      case 'suback':\n        this._parseSuback();\n\n        break;\n\n      case 'unsubscribe':\n        this._parseUnsubscribe();\n\n        break;\n\n      case 'unsuback':\n        this._parseUnsuback();\n\n        break;\n\n      case 'pingreq':\n      case 'pingresp':\n      case 'disconnect':\n        // These are empty, nothing to do\n        break;\n\n      default:\n        this._emitError(new Error('Not supported'));\n\n    }\n\n    result = true;\n  }\n\n  return result;\n};\n\nParser.prototype._parseConnect = function () {\n  var protocolId; // Protocol ID\n\n  var clientId; // Client ID\n\n  var topic; // Will topic\n\n  var payload; // Will payload\n\n  var password; // Password\n\n  var username; // Username\n\n  var flags = {};\n  var packet = this.packet; // Parse protocolId\n\n  protocolId = this._parseString();\n  if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'));\n\n  if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {\n    return this._emitError(new Error('Invalid protocolId'));\n  }\n\n  packet.protocolId = protocolId; // Parse constants version number\n\n  if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'));\n  packet.protocolVersion = this._list.readUInt8(this._pos);\n\n  if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4) {\n    return this._emitError(new Error('Invalid protocol version'));\n  }\n\n  this._pos++;\n\n  if (this._pos >= this._list.length) {\n    return this._emitError(new Error('Packet too short'));\n  } // Parse connect flags\n\n\n  flags.username = this._list.readUInt8(this._pos) & constants.USERNAME_MASK;\n  flags.password = this._list.readUInt8(this._pos) & constants.PASSWORD_MASK;\n  flags.will = this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK;\n\n  if (flags.will) {\n    packet.will = {};\n    packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0;\n    packet.will.qos = (this._list.readUInt8(this._pos) & constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT;\n  }\n\n  packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0;\n  this._pos++; // Parse keepalive\n\n  packet.keepalive = this._parseNum();\n  if (packet.keepalive === -1) return this._emitError(new Error('Packet too short')); // Parse clientId\n\n  clientId = this._parseString();\n  if (clientId === null) return this._emitError(new Error('Packet too short'));\n  packet.clientId = clientId;\n\n  if (flags.will) {\n    // Parse will topic\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('Cannot parse will topic'));\n    packet.will.topic = topic; // Parse will payload\n\n    payload = this._parseBuffer();\n    if (payload === null) return this._emitError(new Error('Cannot parse will payload'));\n    packet.will.payload = payload;\n  } // Parse username\n\n\n  if (flags.username) {\n    username = this._parseString();\n    if (username === null) return this._emitError(new Error('Cannot parse username'));\n    packet.username = username;\n  } // Parse password\n\n\n  if (flags.password) {\n    password = this._parseBuffer();\n    if (password === null) return this._emitError(new Error('Cannot parse password'));\n    packet.password = password;\n  }\n\n  return packet;\n};\n\nParser.prototype._parseConnack = function () {\n  var packet = this.packet;\n  if (this._list.length < 2) return null;\n  packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK);\n  packet.returnCode = this._list.readUInt8(this._pos);\n  if (packet.returnCode === -1) return this._emitError(new Error('Cannot parse return code'));\n};\n\nParser.prototype._parsePublish = function () {\n  var packet = this.packet;\n  packet.topic = this._parseString();\n  if (packet.topic === null) return this._emitError(new Error('Cannot parse topic')); // Parse messageId\n\n  if (packet.qos > 0) if (!this._parseMessageId()) {\n    return;\n  }\n  packet.payload = this._list.slice(this._pos, packet.length);\n};\n\nParser.prototype._parseSubscribe = function () {\n  var packet = this.packet;\n  var topic;\n  var qos;\n\n  if (packet.qos !== 1) {\n    return this._emitError(new Error('Wrong subscribe header'));\n  }\n\n  packet.subscriptions = [];\n\n  if (!this._parseMessageId()) {\n    return;\n  }\n\n  while (this._pos < packet.length) {\n    // Parse topic\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('Cannot parse topic'));\n    if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'));\n    qos = this._list.readUInt8(this._pos++); // Push pair to subscriptions\n\n    packet.subscriptions.push({\n      topic: topic,\n      qos: qos\n    });\n  }\n};\n\nParser.prototype._parseSuback = function () {\n  this.packet.granted = [];\n\n  if (!this._parseMessageId()) {\n    return;\n  } // Parse granted QoSes\n\n\n  while (this._pos < this.packet.length) {\n    this.packet.granted.push(this._list.readUInt8(this._pos++));\n  }\n};\n\nParser.prototype._parseUnsubscribe = function () {\n  var packet = this.packet;\n  packet.unsubscriptions = []; // Parse messageId\n\n  if (!this._parseMessageId()) {\n    return;\n  }\n\n  while (this._pos < packet.length) {\n    var topic; // Parse topic\n\n    topic = this._parseString();\n    if (topic === null) return this._emitError(new Error('Cannot parse topic')); // Push topic to unsubscriptions\n\n    packet.unsubscriptions.push(topic);\n  }\n};\n\nParser.prototype._parseUnsuback = function () {\n  if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId'));\n};\n\nParser.prototype._parseMessageId = function () {\n  var packet = this.packet;\n  packet.messageId = this._parseNum();\n\n  if (packet.messageId === null) {\n    this._emitError(new Error('Cannot parse messageId'));\n\n    return false;\n  }\n\n  return true;\n};\n\nParser.prototype._parseString = function (maybeBuffer) {\n  var length = this._parseNum();\n\n  var result;\n  var end = length + this._pos;\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null;\n  result = this._list.toString('utf8', this._pos, end);\n  this._pos += length;\n  return result;\n};\n\nParser.prototype._parseBuffer = function () {\n  var length = this._parseNum();\n\n  var result;\n  var end = length + this._pos;\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null;\n  result = this._list.slice(this._pos, end);\n  this._pos += length;\n  return result;\n};\n\nParser.prototype._parseNum = function () {\n  if (this._list.length - this._pos < 2) return -1;\n\n  var result = this._list.readUInt16BE(this._pos);\n\n  this._pos += 2;\n  return result;\n};\n\nParser.prototype._newPacket = function () {\n  if (this.packet) {\n    this._list.consume(this.packet.length);\n\n    this.emit('packet', this.packet);\n  }\n\n  this.packet = new Packet();\n  return true;\n};\n\nParser.prototype._emitError = function (err) {\n  this.error = err;\n  this.emit('error', err);\n};\n\nmodule.exports = Parser;","map":{"version":3,"sources":["/Users/neythen/Desktop/Projects/LED_paint/react_web_app/node_modules/mqtt-react/node_modules/mqtt-packet/parser.js"],"names":["bl","require","inherits","EE","EventEmitter","Packet","constants","Parser","_states","_resetState","prototype","packet","error","_list","_stateCounter","parse","buf","append","length","_parseHeader","zero","readUInt8","cmd","types","CMD_SHIFT","retain","RETAIN_MASK","qos","QOS_SHIFT","QOS_MASK","dup","DUP_MASK","consume","_parseLength","bytes","mul","result","current","LENGTH_MASK","LENGTH_FIN_MASK","_parsePayload","_pos","_parseConnect","_parseConnack","_parsePublish","_parseMessageId","_parseSubscribe","_parseSuback","_parseUnsubscribe","_parseUnsuback","_emitError","Error","protocolId","clientId","topic","payload","password","username","flags","_parseString","protocolVersion","USERNAME_MASK","PASSWORD_MASK","will","WILL_FLAG_MASK","WILL_RETAIN_MASK","WILL_QOS_MASK","WILL_QOS_SHIFT","clean","CLEAN_SESSION_MASK","keepalive","_parseNum","_parseBuffer","sessionPresent","SESSIONPRESENT_MASK","returnCode","slice","subscriptions","push","granted","unsubscriptions","messageId","maybeBuffer","end","toString","readUInt16BE","_newPacket","emit","err","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nvar bl = require('bl')\nvar inherits = require('inherits')\nvar EE = require('events').EventEmitter\nvar Packet = require('./packet')\nvar constants = require('./constants')\n\nfunction Parser () {\n  if (!(this instanceof Parser)) return new Parser()\n\n  this._states = [\n    '_parseHeader',\n    '_parseLength',\n    '_parsePayload',\n    '_newPacket'\n  ]\n\n  this._resetState()\n}\n\ninherits(Parser, EE)\n\nParser.prototype._resetState = function () {\n  this.packet = new Packet()\n  this.error = null\n  this._list = bl()\n  this._stateCounter = 0\n}\n\nParser.prototype.parse = function (buf) {\n  if (this.error) this._resetState()\n\n  this._list.append(buf)\n\n  while ((this.packet.length !== -1 || this._list.length > 0) &&\n         this[this._states[this._stateCounter]]() &&\n         !this.error) {\n    this._stateCounter++\n\n    if (this._stateCounter >= this._states.length) this._stateCounter = 0\n  }\n\n  return this._list.length\n}\n\nParser.prototype._parseHeader = function () {\n  // There is at least one byte in the buffer\n  var zero = this._list.readUInt8(0)\n  this.packet.cmd = constants.types[zero >> constants.CMD_SHIFT]\n  this.packet.retain = (zero & constants.RETAIN_MASK) !== 0\n  this.packet.qos = (zero >> constants.QOS_SHIFT) & constants.QOS_MASK\n  this.packet.dup = (zero & constants.DUP_MASK) !== 0\n\n  this._list.consume(1)\n\n  return true\n}\n\nParser.prototype._parseLength = function () {\n  // There is at least one byte in the list\n  var bytes = 0\n  var mul = 1\n  var length = 0\n  var result = true\n  var current\n\n  while (bytes < 5) {\n    current = this._list.readUInt8(bytes++)\n    length += mul * (current & constants.LENGTH_MASK)\n    mul *= 0x80\n\n    if ((current & constants.LENGTH_FIN_MASK) === 0) break\n    if (this._list.length <= bytes) {\n      result = false\n      break\n    }\n  }\n\n  if (result) {\n    this.packet.length = length\n    this._list.consume(bytes)\n  }\n\n  return result\n}\n\nParser.prototype._parsePayload = function () {\n  var result = false\n\n  // Do we have a payload? Do we have enough data to complete the payload?\n  // PINGs have no payload\n  if (this.packet.length === 0 || this._list.length >= this.packet.length) {\n    this._pos = 0\n\n    switch (this.packet.cmd) {\n      case 'connect':\n        this._parseConnect()\n        break\n      case 'connack':\n        this._parseConnack()\n        break\n      case 'publish':\n        this._parsePublish()\n        break\n      case 'puback':\n      case 'pubrec':\n      case 'pubrel':\n      case 'pubcomp':\n        this._parseMessageId()\n        break\n      case 'subscribe':\n        this._parseSubscribe()\n        break\n      case 'suback':\n        this._parseSuback()\n        break\n      case 'unsubscribe':\n        this._parseUnsubscribe()\n        break\n      case 'unsuback':\n        this._parseUnsuback()\n        break\n      case 'pingreq':\n      case 'pingresp':\n      case 'disconnect':\n        // These are empty, nothing to do\n        break\n      default:\n        this._emitError(new Error('Not supported'))\n    }\n\n    result = true\n  }\n\n  return result\n}\n\nParser.prototype._parseConnect = function () {\n  var protocolId // Protocol ID\n  var clientId // Client ID\n  var topic // Will topic\n  var payload // Will payload\n  var password // Password\n  var username // Username\n  var flags = {}\n  var packet = this.packet\n\n  // Parse protocolId\n  protocolId = this._parseString()\n\n  if (protocolId === null) return this._emitError(new Error('Cannot parse protocolId'))\n  if (protocolId !== 'MQTT' && protocolId !== 'MQIsdp') {\n    return this._emitError(new Error('Invalid protocolId'))\n  }\n\n  packet.protocolId = protocolId\n\n  // Parse constants version number\n  if (this._pos >= this._list.length) return this._emitError(new Error('Packet too short'))\n\n  packet.protocolVersion = this._list.readUInt8(this._pos)\n\n  if (packet.protocolVersion !== 3 && packet.protocolVersion !== 4) {\n    return this._emitError(new Error('Invalid protocol version'))\n  }\n\n  this._pos++\n\n  if (this._pos >= this._list.length) {\n    return this._emitError(new Error('Packet too short'))\n  }\n\n  // Parse connect flags\n  flags.username = (this._list.readUInt8(this._pos) & constants.USERNAME_MASK)\n  flags.password = (this._list.readUInt8(this._pos) & constants.PASSWORD_MASK)\n  flags.will = (this._list.readUInt8(this._pos) & constants.WILL_FLAG_MASK)\n\n  if (flags.will) {\n    packet.will = {}\n    packet.will.retain = (this._list.readUInt8(this._pos) & constants.WILL_RETAIN_MASK) !== 0\n    packet.will.qos = (this._list.readUInt8(this._pos) &\n                          constants.WILL_QOS_MASK) >> constants.WILL_QOS_SHIFT\n  }\n\n  packet.clean = (this._list.readUInt8(this._pos) & constants.CLEAN_SESSION_MASK) !== 0\n  this._pos++\n\n  // Parse keepalive\n  packet.keepalive = this._parseNum()\n  if (packet.keepalive === -1) return this._emitError(new Error('Packet too short'))\n\n  // Parse clientId\n  clientId = this._parseString()\n  if (clientId === null) return this._emitError(new Error('Packet too short'))\n  packet.clientId = clientId\n\n  if (flags.will) {\n    // Parse will topic\n    topic = this._parseString()\n    if (topic === null) return this._emitError(new Error('Cannot parse will topic'))\n    packet.will.topic = topic\n\n    // Parse will payload\n    payload = this._parseBuffer()\n    if (payload === null) return this._emitError(new Error('Cannot parse will payload'))\n    packet.will.payload = payload\n  }\n\n  // Parse username\n  if (flags.username) {\n    username = this._parseString()\n    if (username === null) return this._emitError(new Error('Cannot parse username'))\n    packet.username = username\n  }\n\n  // Parse password\n  if (flags.password) {\n    password = this._parseBuffer()\n    if (password === null) return this._emitError(new Error('Cannot parse password'))\n    packet.password = password\n  }\n\n  return packet\n}\n\nParser.prototype._parseConnack = function () {\n  var packet = this.packet\n\n  if (this._list.length < 2) return null\n\n  packet.sessionPresent = !!(this._list.readUInt8(this._pos++) & constants.SESSIONPRESENT_MASK)\n  packet.returnCode = this._list.readUInt8(this._pos)\n\n  if (packet.returnCode === -1) return this._emitError(new Error('Cannot parse return code'))\n}\n\nParser.prototype._parsePublish = function () {\n  var packet = this.packet\n  packet.topic = this._parseString()\n\n  if (packet.topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n  // Parse messageId\n  if (packet.qos > 0) if (!this._parseMessageId()) { return }\n\n  packet.payload = this._list.slice(this._pos, packet.length)\n}\n\nParser.prototype._parseSubscribe = function () {\n  var packet = this.packet\n  var topic\n  var qos\n\n  if (packet.qos !== 1) {\n    return this._emitError(new Error('Wrong subscribe header'))\n  }\n\n  packet.subscriptions = []\n\n  if (!this._parseMessageId()) { return }\n\n  while (this._pos < packet.length) {\n    // Parse topic\n    topic = this._parseString()\n    if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n    if (this._pos >= packet.length) return this._emitError(new Error('Malformed Subscribe Payload'))\n    qos = this._list.readUInt8(this._pos++)\n\n    // Push pair to subscriptions\n    packet.subscriptions.push({ topic: topic, qos: qos })\n  }\n}\n\nParser.prototype._parseSuback = function () {\n  this.packet.granted = []\n\n  if (!this._parseMessageId()) { return }\n\n  // Parse granted QoSes\n  while (this._pos < this.packet.length) {\n    this.packet.granted.push(this._list.readUInt8(this._pos++))\n  }\n}\n\nParser.prototype._parseUnsubscribe = function () {\n  var packet = this.packet\n\n  packet.unsubscriptions = []\n\n  // Parse messageId\n  if (!this._parseMessageId()) { return }\n\n  while (this._pos < packet.length) {\n    var topic\n\n    // Parse topic\n    topic = this._parseString()\n    if (topic === null) return this._emitError(new Error('Cannot parse topic'))\n\n    // Push topic to unsubscriptions\n    packet.unsubscriptions.push(topic)\n  }\n}\n\nParser.prototype._parseUnsuback = function () {\n  if (!this._parseMessageId()) return this._emitError(new Error('Cannot parse messageId'))\n}\n\nParser.prototype._parseMessageId = function () {\n  var packet = this.packet\n\n  packet.messageId = this._parseNum()\n\n  if (packet.messageId === null) {\n    this._emitError(new Error('Cannot parse messageId'))\n    return false\n  }\n\n  return true\n}\n\nParser.prototype._parseString = function (maybeBuffer) {\n  var length = this._parseNum()\n  var result\n  var end = length + this._pos\n\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n  result = this._list.toString('utf8', this._pos, end)\n  this._pos += length\n\n  return result\n}\n\nParser.prototype._parseBuffer = function () {\n  var length = this._parseNum()\n  var result\n  var end = length + this._pos\n\n  if (length === -1 || end > this._list.length || end > this.packet.length) return null\n\n  result = this._list.slice(this._pos, end)\n\n  this._pos += length\n\n  return result\n}\n\nParser.prototype._parseNum = function () {\n  if (this._list.length - this._pos < 2) return -1\n\n  var result = this._list.readUInt16BE(this._pos)\n  this._pos += 2\n\n  return result\n}\n\nParser.prototype._newPacket = function () {\n  if (this.packet) {\n    this._list.consume(this.packet.length)\n    this.emit('packet', this.packet)\n  }\n\n  this.packet = new Packet()\n\n  return true\n}\n\nParser.prototype._emitError = function (err) {\n  this.error = err\n  this.emit('error', err)\n}\n\nmodule.exports = Parser\n"]},"metadata":{},"sourceType":"script"}