{"ast":null,"code":"'use strict';\n\nvar protocol = require('./constants');\n\nvar Buffer = require('safe-buffer').Buffer;\n\nvar empty = Buffer.allocUnsafe(0);\nvar zeroBuf = Buffer.from([0]);\n\nvar numbers = require('./numbers');\n\nvar nextTick = require('process-nextick-args').nextTick;\n\nvar numCache = numbers.cache;\nvar generateNumber = numbers.generateNumber;\nvar generateCache = numbers.generateCache;\nvar writeNumber = writeNumberCached;\nvar toGenerate = true;\n\nfunction generate(packet, stream) {\n  if (stream.cork) {\n    stream.cork();\n    nextTick(uncork, stream);\n  }\n\n  if (toGenerate) {\n    toGenerate = false;\n    generateCache();\n  }\n\n  switch (packet.cmd) {\n    case 'connect':\n      return connect(packet, stream);\n\n    case 'connack':\n      return connack(packet, stream);\n\n    case 'publish':\n      return publish(packet, stream);\n\n    case 'puback':\n    case 'pubrec':\n    case 'pubrel':\n    case 'pubcomp':\n    case 'unsuback':\n      return confirmation(packet, stream);\n\n    case 'subscribe':\n      return subscribe(packet, stream);\n\n    case 'suback':\n      return suback(packet, stream);\n\n    case 'unsubscribe':\n      return unsubscribe(packet, stream);\n\n    case 'pingreq':\n    case 'pingresp':\n    case 'disconnect':\n      return emptyPacket(packet, stream);\n\n    default:\n      stream.emit('error', new Error('Unknown command'));\n      return false;\n  }\n}\n/**\n * Controls numbers cache.\n * Set to \"false\" to allocate buffers on-the-flight instead of pre-generated cache\n */\n\n\nObject.defineProperty(generate, 'cacheNumbers', {\n  get: function () {\n    return writeNumber === writeNumberCached;\n  },\n  set: function (value) {\n    if (value) {\n      if (!numCache || Object.keys(numCache).length === 0) toGenerate = true;\n      writeNumber = writeNumberCached;\n    } else {\n      toGenerate = false;\n      writeNumber = writeNumberGenerated;\n    }\n  }\n});\n\nfunction uncork(stream) {\n  stream.uncork();\n}\n\nfunction connect(opts, stream) {\n  var settings = opts || {};\n  var protocolId = settings.protocolId || 'MQTT';\n  var protocolVersion = settings.protocolVersion || 4;\n  var will = settings.will;\n  var clean = settings.clean;\n  var keepalive = settings.keepalive || 0;\n  var clientId = settings.clientId || '';\n  var username = settings.username;\n  var password = settings.password;\n  if (clean === undefined) clean = true;\n  var length = 0; // Must be a string and non-falsy\n\n  if (!protocolId || typeof protocolId !== 'string' && !Buffer.isBuffer(protocolId)) {\n    stream.emit('error', new Error('Invalid protocolId'));\n    return false;\n  } else length += protocolId.length + 2; // Must be 3 or 4\n\n\n  if (protocolVersion !== 3 && protocolVersion !== 4) {\n    stream.emit('error', new Error('Invalid protocol version'));\n    return false;\n  } else length += 1; // ClientId might be omitted in 3.1.1, but only if cleanSession is set to 1\n\n\n  if ((typeof clientId === 'string' || Buffer.isBuffer(clientId)) && (clientId || protocolVersion === 4) && (clientId || clean)) {\n    length += clientId.length + 2;\n  } else {\n    if (protocolVersion < 4) {\n      stream.emit('error', new Error('clientId must be supplied before 3.1.1'));\n      return false;\n    }\n\n    if (clean * 1 === 0) {\n      stream.emit('error', new Error('clientId must be given if cleanSession set to 0'));\n      return false;\n    }\n  } // Must be a two byte number\n\n\n  if (typeof keepalive !== 'number' || keepalive < 0 || keepalive > 65535 || keepalive % 1 !== 0) {\n    stream.emit('error', new Error('Invalid keepalive'));\n    return false;\n  } else length += 2; // Connect flags\n\n\n  length += 1; // If will exists...\n\n  if (will) {\n    // It must be an object\n    if (typeof will !== 'object') {\n      stream.emit('error', new Error('Invalid will'));\n      return false;\n    } // It must have topic typeof string\n\n\n    if (!will.topic || typeof will.topic !== 'string') {\n      stream.emit('error', new Error('Invalid will topic'));\n      return false;\n    } else {\n      length += Buffer.byteLength(will.topic) + 2;\n    } // Payload\n\n\n    if (will.payload && will.payload) {\n      if (will.payload.length >= 0) {\n        if (typeof will.payload === 'string') {\n          length += Buffer.byteLength(will.payload) + 2;\n        } else {\n          length += will.payload.length + 2;\n        }\n      } else {\n        stream.emit('error', new Error('Invalid will payload'));\n        return false;\n      }\n    } else {\n      length += 2;\n    }\n  } // Username\n\n\n  var providedUsername = false;\n\n  if (username != null) {\n    if (isStringOrBuffer(username)) {\n      providedUsername = true;\n      length += Buffer.byteLength(username) + 2;\n    } else {\n      stream.emit('error', new Error('Invalid username'));\n      return false;\n    }\n  } // Password\n\n\n  if (password != null) {\n    if (!providedUsername) {\n      stream.emit('error', new Error('Username is required to use password'));\n      return false;\n    }\n\n    if (isStringOrBuffer(password)) {\n      length += byteLength(password) + 2;\n    } else {\n      stream.emit('error', new Error('Invalid password'));\n      return false;\n    }\n  } // Generate header\n\n\n  stream.write(protocol.CONNECT_HEADER); // Generate length\n\n  writeLength(stream, length); // Generate protocol ID\n\n  writeStringOrBuffer(stream, protocolId);\n  stream.write(protocolVersion === 4 ? protocol.VERSION4 : protocol.VERSION3); // Connect flags\n\n  var flags = 0;\n  flags |= username != null ? protocol.USERNAME_MASK : 0;\n  flags |= password != null ? protocol.PASSWORD_MASK : 0;\n  flags |= will && will.retain ? protocol.WILL_RETAIN_MASK : 0;\n  flags |= will && will.qos ? will.qos << protocol.WILL_QOS_SHIFT : 0;\n  flags |= will ? protocol.WILL_FLAG_MASK : 0;\n  flags |= clean ? protocol.CLEAN_SESSION_MASK : 0;\n  stream.write(Buffer.from([flags])); // Keepalive\n\n  writeNumber(stream, keepalive); // Client ID\n\n  writeStringOrBuffer(stream, clientId); // Will\n\n  if (will) {\n    writeString(stream, will.topic);\n    writeStringOrBuffer(stream, will.payload);\n  } // Username and password\n\n\n  if (username != null) {\n    writeStringOrBuffer(stream, username);\n  }\n\n  if (password != null) {\n    writeStringOrBuffer(stream, password);\n  } // This is a small packet that happens only once on a stream\n  // We assume the stream is always free to receive more data after this\n\n\n  return true;\n}\n\nfunction connack(opts, stream) {\n  var settings = opts || {};\n  var rc = settings.returnCode; // Check return code\n\n  if (typeof rc !== 'number') {\n    stream.emit('error', new Error('Invalid return code'));\n    return false;\n  }\n\n  stream.write(protocol.CONNACK_HEADER);\n  writeLength(stream, 2);\n  stream.write(opts.sessionPresent ? protocol.SESSIONPRESENT_HEADER : zeroBuf);\n  return stream.write(Buffer.from([rc]));\n}\n\nfunction publish(opts, stream) {\n  var settings = opts || {};\n  var qos = settings.qos || 0;\n  var retain = settings.retain ? protocol.RETAIN_MASK : 0;\n  var topic = settings.topic;\n  var payload = settings.payload || empty;\n  var id = settings.messageId;\n  var length = 0; // Topic must be a non-empty string or Buffer\n\n  if (typeof topic === 'string') length += Buffer.byteLength(topic) + 2;else if (Buffer.isBuffer(topic)) length += topic.length + 2;else {\n    stream.emit('error', new Error('Invalid topic'));\n    return false;\n  } // Get the payload length\n\n  if (!Buffer.isBuffer(payload)) length += Buffer.byteLength(payload);else length += payload.length; // Message ID must a number if qos > 0\n\n  if (qos && typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'));\n    return false;\n  } else if (qos) length += 2; // Header\n\n\n  stream.write(protocol.PUBLISH_HEADER[qos][opts.dup ? 1 : 0][retain ? 1 : 0]); // Remaining length\n\n  writeLength(stream, length); // Topic\n\n  writeNumber(stream, byteLength(topic));\n  stream.write(topic); // Message ID\n\n  if (qos > 0) writeNumber(stream, id); // Payload\n\n  return stream.write(payload);\n}\n/* Puback, pubrec, pubrel and pubcomp */\n\n\nfunction confirmation(opts, stream) {\n  var settings = opts || {};\n  var type = settings.cmd || 'puback';\n  var id = settings.messageId;\n  var dup = settings.dup && type === 'pubrel' ? protocol.DUP_MASK : 0;\n  var qos = 0;\n  if (type === 'pubrel') qos = 1; // Check message ID\n\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'));\n    return false;\n  } // Header\n\n\n  stream.write(protocol.ACKS[type][qos][dup][0]); // Length\n\n  writeLength(stream, 2); // Message ID\n\n  return writeNumber(stream, id);\n}\n\nfunction subscribe(opts, stream) {\n  var settings = opts || {};\n  var dup = settings.dup ? protocol.DUP_MASK : 0;\n  var id = settings.messageId;\n  var subs = settings.subscriptions;\n  var length = 0; // Check message ID\n\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'));\n    return false;\n  } else length += 2; // Check subscriptions\n\n\n  if (typeof subs === 'object' && subs.length) {\n    for (var i = 0; i < subs.length; i += 1) {\n      var itopic = subs[i].topic;\n      var iqos = subs[i].qos;\n\n      if (typeof itopic !== 'string') {\n        stream.emit('error', new Error('Invalid subscriptions - invalid topic'));\n        return false;\n      }\n\n      if (typeof iqos !== 'number') {\n        stream.emit('error', new Error('Invalid subscriptions - invalid qos'));\n        return false;\n      }\n\n      length += Buffer.byteLength(itopic) + 2 + 1;\n    }\n  } else {\n    stream.emit('error', new Error('Invalid subscriptions'));\n    return false;\n  } // Generate header\n\n\n  stream.write(protocol.SUBSCRIBE_HEADER[1][dup ? 1 : 0][0]); // Generate length\n\n  writeLength(stream, length); // Generate message ID\n\n  writeNumber(stream, id);\n  var result = true; // Generate subs\n\n  for (var j = 0; j < subs.length; j++) {\n    var sub = subs[j];\n    var jtopic = sub.topic;\n    var jqos = sub.qos; // Write topic string\n\n    writeString(stream, jtopic); // Write qos\n\n    result = stream.write(protocol.QOS[jqos]);\n  }\n\n  return result;\n}\n\nfunction suback(opts, stream) {\n  var settings = opts || {};\n  var id = settings.messageId;\n  var granted = settings.granted;\n  var length = 0; // Check message ID\n\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'));\n    return false;\n  } else length += 2; // Check granted qos vector\n\n\n  if (typeof granted === 'object' && granted.length) {\n    for (var i = 0; i < granted.length; i += 1) {\n      if (typeof granted[i] !== 'number') {\n        stream.emit('error', new Error('Invalid qos vector'));\n        return false;\n      }\n\n      length += 1;\n    }\n  } else {\n    stream.emit('error', new Error('Invalid qos vector'));\n    return false;\n  } // header\n\n\n  stream.write(protocol.SUBACK_HEADER); // Length\n\n  writeLength(stream, length); // Message ID\n\n  writeNumber(stream, id);\n  return stream.write(Buffer.from(granted));\n}\n\nfunction unsubscribe(opts, stream) {\n  var settings = opts || {};\n  var id = settings.messageId;\n  var dup = settings.dup ? protocol.DUP_MASK : 0;\n  var unsubs = settings.unsubscriptions;\n  var length = 0; // Check message ID\n\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'));\n    return false;\n  } else {\n    length += 2;\n  } // Check unsubs\n\n\n  if (typeof unsubs === 'object' && unsubs.length) {\n    for (var i = 0; i < unsubs.length; i += 1) {\n      if (typeof unsubs[i] !== 'string') {\n        stream.emit('error', new Error('Invalid unsubscriptions'));\n        return false;\n      }\n\n      length += Buffer.byteLength(unsubs[i]) + 2;\n    }\n  } else {\n    stream.emit('error', new Error('Invalid unsubscriptions'));\n    return false;\n  } // Header\n\n\n  stream.write(protocol.UNSUBSCRIBE_HEADER[1][dup ? 1 : 0][0]); // Length\n\n  writeLength(stream, length); // Message ID\n\n  writeNumber(stream, id); // Unsubs\n\n  var result = true;\n\n  for (var j = 0; j < unsubs.length; j++) {\n    result = writeString(stream, unsubs[j]);\n  }\n\n  return result;\n}\n\nfunction emptyPacket(opts, stream) {\n  return stream.write(protocol.EMPTY[opts.cmd]);\n}\n/**\n * calcLengthLength - calculate the length of the remaining\n * length field\n *\n * @api private\n */\n\n\nfunction calcLengthLength(length) {\n  if (length >= 0 && length < 128) return 1;else if (length >= 128 && length < 16384) return 2;else if (length >= 16384 && length < 2097152) return 3;else if (length >= 2097152 && length < 268435456) return 4;else return 0;\n}\n\nfunction genBufLength(length) {\n  var digit = 0;\n  var pos = 0;\n  var buffer = Buffer.allocUnsafe(calcLengthLength(length));\n\n  do {\n    digit = length % 128 | 0;\n    length = length / 128 | 0;\n    if (length > 0) digit = digit | 0x80;\n    buffer.writeUInt8(digit, pos++);\n  } while (length > 0);\n\n  return buffer;\n}\n/**\n * writeLength - write an MQTT style length field to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <Number> length - length (>0)\n * @returns <Number> number of bytes written\n *\n * @api private\n */\n\n\nvar lengthCache = {};\n\nfunction writeLength(stream, length) {\n  var buffer = lengthCache[length];\n\n  if (!buffer) {\n    buffer = genBufLength(length);\n    if (length < 16384) lengthCache[length] = buffer;\n  }\n\n  stream.write(buffer);\n}\n/**\n * writeString - write a utf8 string to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> string - string to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\n\n\nfunction writeString(stream, string) {\n  var strlen = Buffer.byteLength(string);\n  writeNumber(stream, strlen);\n  stream.write(string, 'utf8');\n}\n/**\n * writeNumber - write a two byte number to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> number - number to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\n\n\nfunction writeNumberCached(stream, number) {\n  return stream.write(numCache[number]);\n}\n\nfunction writeNumberGenerated(stream, number) {\n  return stream.write(generateNumber(number));\n}\n/**\n * writeStringOrBuffer - write a String or Buffer with the its length prefix\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> toWrite - String or Buffer\n * @return <Number> number of bytes written\n */\n\n\nfunction writeStringOrBuffer(stream, toWrite) {\n  if (typeof toWrite === 'string') {\n    writeString(stream, toWrite);\n  } else if (toWrite) {\n    writeNumber(stream, toWrite.length);\n    stream.write(toWrite);\n  } else writeNumber(stream, 0);\n}\n\nfunction byteLength(bufOrString) {\n  if (!bufOrString) return 0;else if (bufOrString instanceof Buffer) return bufOrString.length;else return Buffer.byteLength(bufOrString);\n}\n\nfunction isStringOrBuffer(field) {\n  return typeof field === 'string' || field instanceof Buffer;\n}\n\nmodule.exports = generate;","map":{"version":3,"sources":["/Users/neythen/Desktop/Projects/LED_paint/react_web_app/node_modules/mqtt-react/node_modules/mqtt-packet/writeToStream.js"],"names":["protocol","require","Buffer","empty","allocUnsafe","zeroBuf","from","numbers","nextTick","numCache","cache","generateNumber","generateCache","writeNumber","writeNumberCached","toGenerate","generate","packet","stream","cork","uncork","cmd","connect","connack","publish","confirmation","subscribe","suback","unsubscribe","emptyPacket","emit","Error","Object","defineProperty","get","set","value","keys","length","writeNumberGenerated","opts","settings","protocolId","protocolVersion","will","clean","keepalive","clientId","username","password","undefined","isBuffer","topic","byteLength","payload","providedUsername","isStringOrBuffer","write","CONNECT_HEADER","writeLength","writeStringOrBuffer","VERSION4","VERSION3","flags","USERNAME_MASK","PASSWORD_MASK","retain","WILL_RETAIN_MASK","qos","WILL_QOS_SHIFT","WILL_FLAG_MASK","CLEAN_SESSION_MASK","writeString","rc","returnCode","CONNACK_HEADER","sessionPresent","SESSIONPRESENT_HEADER","RETAIN_MASK","id","messageId","PUBLISH_HEADER","dup","type","DUP_MASK","ACKS","subs","subscriptions","i","itopic","iqos","SUBSCRIBE_HEADER","result","j","sub","jtopic","jqos","QOS","granted","SUBACK_HEADER","unsubs","unsubscriptions","UNSUBSCRIBE_HEADER","EMPTY","calcLengthLength","genBufLength","digit","pos","buffer","writeUInt8","lengthCache","string","strlen","number","toWrite","bufOrString","field","module","exports"],"mappings":"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","sourcesContent":["'use strict'\n\nvar protocol = require('./constants')\nvar Buffer = require('safe-buffer').Buffer\nvar empty = Buffer.allocUnsafe(0)\nvar zeroBuf = Buffer.from([0])\nvar numbers = require('./numbers')\nvar nextTick = require('process-nextick-args').nextTick\n\nvar numCache = numbers.cache\nvar generateNumber = numbers.generateNumber\nvar generateCache = numbers.generateCache\nvar writeNumber = writeNumberCached\nvar toGenerate = true\n\nfunction generate (packet, stream) {\n  if (stream.cork) {\n    stream.cork()\n    nextTick(uncork, stream)\n  }\n\n  if (toGenerate) {\n    toGenerate = false\n    generateCache()\n  }\n\n  switch (packet.cmd) {\n    case 'connect':\n      return connect(packet, stream)\n    case 'connack':\n      return connack(packet, stream)\n    case 'publish':\n      return publish(packet, stream)\n    case 'puback':\n    case 'pubrec':\n    case 'pubrel':\n    case 'pubcomp':\n    case 'unsuback':\n      return confirmation(packet, stream)\n    case 'subscribe':\n      return subscribe(packet, stream)\n    case 'suback':\n      return suback(packet, stream)\n    case 'unsubscribe':\n      return unsubscribe(packet, stream)\n    case 'pingreq':\n    case 'pingresp':\n    case 'disconnect':\n      return emptyPacket(packet, stream)\n    default:\n      stream.emit('error', new Error('Unknown command'))\n      return false\n  }\n}\n/**\n * Controls numbers cache.\n * Set to \"false\" to allocate buffers on-the-flight instead of pre-generated cache\n */\nObject.defineProperty(generate, 'cacheNumbers', {\n  get: function () {\n    return writeNumber === writeNumberCached\n  },\n  set: function (value) {\n    if (value) {\n      if (!numCache || Object.keys(numCache).length === 0) toGenerate = true\n      writeNumber = writeNumberCached\n    } else {\n      toGenerate = false\n      writeNumber = writeNumberGenerated\n    }\n  }\n})\n\nfunction uncork (stream) {\n  stream.uncork()\n}\n\nfunction connect (opts, stream) {\n  var settings = opts || {}\n  var protocolId = settings.protocolId || 'MQTT'\n  var protocolVersion = settings.protocolVersion || 4\n  var will = settings.will\n  var clean = settings.clean\n  var keepalive = settings.keepalive || 0\n  var clientId = settings.clientId || ''\n  var username = settings.username\n  var password = settings.password\n\n  if (clean === undefined) clean = true\n\n  var length = 0\n\n  // Must be a string and non-falsy\n  if (!protocolId ||\n     (typeof protocolId !== 'string' && !Buffer.isBuffer(protocolId))) {\n    stream.emit('error', new Error('Invalid protocolId'))\n    return false\n  } else length += protocolId.length + 2\n\n  // Must be 3 or 4\n  if (protocolVersion !== 3 && protocolVersion !== 4) {\n    stream.emit('error', new Error('Invalid protocol version'))\n    return false\n  } else length += 1\n\n  // ClientId might be omitted in 3.1.1, but only if cleanSession is set to 1\n  if ((typeof clientId === 'string' || Buffer.isBuffer(clientId)) &&\n     (clientId || protocolVersion === 4) && (clientId || clean)) {\n    length += clientId.length + 2\n  } else {\n    if (protocolVersion < 4) {\n      stream.emit('error', new Error('clientId must be supplied before 3.1.1'))\n      return false\n    }\n    if ((clean * 1) === 0) {\n      stream.emit('error', new Error('clientId must be given if cleanSession set to 0'))\n      return false\n    }\n  }\n\n  // Must be a two byte number\n  if (typeof keepalive !== 'number' ||\n      keepalive < 0 ||\n      keepalive > 65535 ||\n      keepalive % 1 !== 0) {\n    stream.emit('error', new Error('Invalid keepalive'))\n    return false\n  } else length += 2\n\n  // Connect flags\n  length += 1\n\n  // If will exists...\n  if (will) {\n    // It must be an object\n    if (typeof will !== 'object') {\n      stream.emit('error', new Error('Invalid will'))\n      return false\n    }\n    // It must have topic typeof string\n    if (!will.topic || typeof will.topic !== 'string') {\n      stream.emit('error', new Error('Invalid will topic'))\n      return false\n    } else {\n      length += Buffer.byteLength(will.topic) + 2\n    }\n\n    // Payload\n    if (will.payload && will.payload) {\n      if (will.payload.length >= 0) {\n        if (typeof will.payload === 'string') {\n          length += Buffer.byteLength(will.payload) + 2\n        } else {\n          length += will.payload.length + 2\n        }\n      } else {\n        stream.emit('error', new Error('Invalid will payload'))\n        return false\n      }\n    } else {\n      length += 2\n    }\n  }\n\n  // Username\n  var providedUsername = false\n  if (username != null) {\n    if (isStringOrBuffer(username)) {\n      providedUsername = true\n      length += Buffer.byteLength(username) + 2\n    } else {\n      stream.emit('error', new Error('Invalid username'))\n      return false\n    }\n  }\n\n  // Password\n  if (password != null) {\n    if (!providedUsername) {\n      stream.emit('error', new Error('Username is required to use password'))\n      return false\n    }\n\n    if (isStringOrBuffer(password)) {\n      length += byteLength(password) + 2\n    } else {\n      stream.emit('error', new Error('Invalid password'))\n      return false\n    }\n  }\n\n  // Generate header\n  stream.write(protocol.CONNECT_HEADER)\n\n  // Generate length\n  writeLength(stream, length)\n\n  // Generate protocol ID\n  writeStringOrBuffer(stream, protocolId)\n  stream.write(\n    protocolVersion === 4 ? protocol.VERSION4 : protocol.VERSION3\n  )\n\n  // Connect flags\n  var flags = 0\n  flags |= (username != null) ? protocol.USERNAME_MASK : 0\n  flags |= (password != null) ? protocol.PASSWORD_MASK : 0\n  flags |= (will && will.retain) ? protocol.WILL_RETAIN_MASK : 0\n  flags |= (will && will.qos) ? will.qos << protocol.WILL_QOS_SHIFT : 0\n  flags |= will ? protocol.WILL_FLAG_MASK : 0\n  flags |= clean ? protocol.CLEAN_SESSION_MASK : 0\n\n  stream.write(Buffer.from([flags]))\n\n  // Keepalive\n  writeNumber(stream, keepalive)\n\n  // Client ID\n  writeStringOrBuffer(stream, clientId)\n\n  // Will\n  if (will) {\n    writeString(stream, will.topic)\n    writeStringOrBuffer(stream, will.payload)\n  }\n\n  // Username and password\n  if (username != null) {\n    writeStringOrBuffer(stream, username)\n  }\n  if (password != null) {\n    writeStringOrBuffer(stream, password)\n  }\n  // This is a small packet that happens only once on a stream\n  // We assume the stream is always free to receive more data after this\n  return true\n}\n\nfunction connack (opts, stream) {\n  var settings = opts || {}\n  var rc = settings.returnCode\n\n  // Check return code\n  if (typeof rc !== 'number') {\n    stream.emit('error', new Error('Invalid return code'))\n    return false\n  }\n\n  stream.write(protocol.CONNACK_HEADER)\n  writeLength(stream, 2)\n  stream.write(opts.sessionPresent ? protocol.SESSIONPRESENT_HEADER : zeroBuf)\n\n  return stream.write(Buffer.from([rc]))\n}\n\nfunction publish (opts, stream) {\n  var settings = opts || {}\n  var qos = settings.qos || 0\n  var retain = settings.retain ? protocol.RETAIN_MASK : 0\n  var topic = settings.topic\n  var payload = settings.payload || empty\n  var id = settings.messageId\n\n  var length = 0\n\n  // Topic must be a non-empty string or Buffer\n  if (typeof topic === 'string') length += Buffer.byteLength(topic) + 2\n  else if (Buffer.isBuffer(topic)) length += topic.length + 2\n  else {\n    stream.emit('error', new Error('Invalid topic'))\n    return false\n  }\n\n  // Get the payload length\n  if (!Buffer.isBuffer(payload)) length += Buffer.byteLength(payload)\n  else length += payload.length\n\n  // Message ID must a number if qos > 0\n  if (qos && typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'))\n    return false\n  } else if (qos) length += 2\n\n  // Header\n  stream.write(protocol.PUBLISH_HEADER[qos][opts.dup ? 1 : 0][retain ? 1 : 0])\n\n  // Remaining length\n  writeLength(stream, length)\n\n  // Topic\n  writeNumber(stream, byteLength(topic))\n  stream.write(topic)\n\n  // Message ID\n  if (qos > 0) writeNumber(stream, id)\n\n  // Payload\n  return stream.write(payload)\n}\n\n/* Puback, pubrec, pubrel and pubcomp */\nfunction confirmation (opts, stream) {\n  var settings = opts || {}\n  var type = settings.cmd || 'puback'\n  var id = settings.messageId\n  var dup = (settings.dup && type === 'pubrel') ? protocol.DUP_MASK : 0\n  var qos = 0\n\n  if (type === 'pubrel') qos = 1\n\n  // Check message ID\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'))\n    return false\n  }\n\n  // Header\n  stream.write(protocol.ACKS[type][qos][dup][0])\n\n  // Length\n  writeLength(stream, 2)\n\n  // Message ID\n  return writeNumber(stream, id)\n}\n\nfunction subscribe (opts, stream) {\n  var settings = opts || {}\n  var dup = settings.dup ? protocol.DUP_MASK : 0\n  var id = settings.messageId\n  var subs = settings.subscriptions\n\n  var length = 0\n\n  // Check message ID\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'))\n    return false\n  } else length += 2\n\n  // Check subscriptions\n  if (typeof subs === 'object' && subs.length) {\n    for (var i = 0; i < subs.length; i += 1) {\n      var itopic = subs[i].topic\n      var iqos = subs[i].qos\n\n      if (typeof itopic !== 'string') {\n        stream.emit('error', new Error('Invalid subscriptions - invalid topic'))\n        return false\n      }\n      if (typeof iqos !== 'number') {\n        stream.emit('error', new Error('Invalid subscriptions - invalid qos'))\n        return false\n      }\n\n      length += Buffer.byteLength(itopic) + 2 + 1\n    }\n  } else {\n    stream.emit('error', new Error('Invalid subscriptions'))\n    return false\n  }\n\n  // Generate header\n  stream.write(protocol.SUBSCRIBE_HEADER[1][dup ? 1 : 0][0])\n\n  // Generate length\n  writeLength(stream, length)\n\n  // Generate message ID\n  writeNumber(stream, id)\n\n  var result = true\n\n  // Generate subs\n  for (var j = 0; j < subs.length; j++) {\n    var sub = subs[j]\n    var jtopic = sub.topic\n    var jqos = sub.qos\n\n    // Write topic string\n    writeString(stream, jtopic)\n\n    // Write qos\n    result = stream.write(protocol.QOS[jqos])\n  }\n\n  return result\n}\n\nfunction suback (opts, stream) {\n  var settings = opts || {}\n  var id = settings.messageId\n  var granted = settings.granted\n\n  var length = 0\n\n  // Check message ID\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'))\n    return false\n  } else length += 2\n\n  // Check granted qos vector\n  if (typeof granted === 'object' && granted.length) {\n    for (var i = 0; i < granted.length; i += 1) {\n      if (typeof granted[i] !== 'number') {\n        stream.emit('error', new Error('Invalid qos vector'))\n        return false\n      }\n      length += 1\n    }\n  } else {\n    stream.emit('error', new Error('Invalid qos vector'))\n    return false\n  }\n\n  // header\n  stream.write(protocol.SUBACK_HEADER)\n\n  // Length\n  writeLength(stream, length)\n\n  // Message ID\n  writeNumber(stream, id)\n\n  return stream.write(Buffer.from(granted))\n}\n\nfunction unsubscribe (opts, stream) {\n  var settings = opts || {}\n  var id = settings.messageId\n  var dup = settings.dup ? protocol.DUP_MASK : 0\n  var unsubs = settings.unsubscriptions\n\n  var length = 0\n\n  // Check message ID\n  if (typeof id !== 'number') {\n    stream.emit('error', new Error('Invalid messageId'))\n    return false\n  } else {\n    length += 2\n  }\n  // Check unsubs\n  if (typeof unsubs === 'object' && unsubs.length) {\n    for (var i = 0; i < unsubs.length; i += 1) {\n      if (typeof unsubs[i] !== 'string') {\n        stream.emit('error', new Error('Invalid unsubscriptions'))\n        return false\n      }\n      length += Buffer.byteLength(unsubs[i]) + 2\n    }\n  } else {\n    stream.emit('error', new Error('Invalid unsubscriptions'))\n    return false\n  }\n\n  // Header\n  stream.write(protocol.UNSUBSCRIBE_HEADER[1][dup ? 1 : 0][0])\n\n  // Length\n  writeLength(stream, length)\n\n  // Message ID\n  writeNumber(stream, id)\n\n  // Unsubs\n  var result = true\n  for (var j = 0; j < unsubs.length; j++) {\n    result = writeString(stream, unsubs[j])\n  }\n\n  return result\n}\n\nfunction emptyPacket (opts, stream) {\n  return stream.write(protocol.EMPTY[opts.cmd])\n}\n\n/**\n * calcLengthLength - calculate the length of the remaining\n * length field\n *\n * @api private\n */\nfunction calcLengthLength (length) {\n  if (length >= 0 && length < 128) return 1\n  else if (length >= 128 && length < 16384) return 2\n  else if (length >= 16384 && length < 2097152) return 3\n  else if (length >= 2097152 && length < 268435456) return 4\n  else return 0\n}\n\nfunction genBufLength (length) {\n  var digit = 0\n  var pos = 0\n  var buffer = Buffer.allocUnsafe(calcLengthLength(length))\n\n  do {\n    digit = length % 128 | 0\n    length = length / 128 | 0\n    if (length > 0) digit = digit | 0x80\n\n    buffer.writeUInt8(digit, pos++)\n  } while (length > 0)\n\n  return buffer\n}\n\n/**\n * writeLength - write an MQTT style length field to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <Number> length - length (>0)\n * @returns <Number> number of bytes written\n *\n * @api private\n */\n\nvar lengthCache = {}\nfunction writeLength (stream, length) {\n  var buffer = lengthCache[length]\n\n  if (!buffer) {\n    buffer = genBufLength(length)\n    if (length < 16384) lengthCache[length] = buffer\n  }\n\n  stream.write(buffer)\n}\n\n/**\n * writeString - write a utf8 string to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> string - string to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\n\nfunction writeString (stream, string) {\n  var strlen = Buffer.byteLength(string)\n  writeNumber(stream, strlen)\n\n  stream.write(string, 'utf8')\n}\n\n/**\n * writeNumber - write a two byte number to the buffer\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> number - number to write\n * @return <Number> number of bytes written\n *\n * @api private\n */\nfunction writeNumberCached (stream, number) {\n  return stream.write(numCache[number])\n}\nfunction writeNumberGenerated (stream, number) {\n  return stream.write(generateNumber(number))\n}\n\n/**\n * writeStringOrBuffer - write a String or Buffer with the its length prefix\n *\n * @param <Buffer> buffer - destination\n * @param <Number> pos - offset\n * @param <String> toWrite - String or Buffer\n * @return <Number> number of bytes written\n */\nfunction writeStringOrBuffer (stream, toWrite) {\n  if (typeof toWrite === 'string') {\n    writeString(stream, toWrite)\n  } else if (toWrite) {\n    writeNumber(stream, toWrite.length)\n    stream.write(toWrite)\n  } else writeNumber(stream, 0)\n}\n\nfunction byteLength (bufOrString) {\n  if (!bufOrString) return 0\n  else if (bufOrString instanceof Buffer) return bufOrString.length\n  else return Buffer.byteLength(bufOrString)\n}\n\nfunction isStringOrBuffer (field) {\n  return typeof field === 'string' || field instanceof Buffer\n}\n\nmodule.exports = generate\n"]},"metadata":{},"sourceType":"script"}