{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/neythen/Desktop/Projects/LED_paint/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction range(start, stop, step) {\n  if (typeof stop == 'undefined') {\n    // one param defined\n    stop = start;\n    start = 0;\n  }\n\n  if (typeof step == 'undefined') {\n    step = 1;\n  }\n\n  if (step > 0 && start >= stop || step < 0 && start <= stop) {\n    return [];\n  }\n\n  var result = [];\n\n  for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n    result.push(i);\n  }\n\n  return result;\n}\n\n;\n\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Square;\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderSquare = (row, col) => {\n      return /*#__PURE__*/_jsxDEV(Square, {\n        value: this.props.pixels[row][col],\n        onClick: () => this.props.onClick(row, col)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderRow = n_cols => {\n      var indices = range(0, n_cols);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: indices.map(this.renderSquare)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this);\n    };\n  }\n\n  renderRows(n_rows, n_cols) {\n    var row_indices = new Array(n_rows).fill(n_cols);\n    return row_indices.map(this.renderRow);\n  }\n\n  render() {\n    let n_rows = 7;\n    let n_cols = 10;\n    return this.renderRows(n_rows, n_cols)\n    /*\n    <div>\n      <div className=\"board-row\">\n        {this.renderRow(0,10)}\n      </div>\n      <div className=\"board-row\">\n        {this.renderRow(0,10)}\n      </div>\n      <div className=\"board-row\">\n        {this.renderRow(0,10)}\n      </div>\n    </div>\n    */\n    ;\n  }\n\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let n_rows = 7;\n    let n_cols = 10;\n    this.state = {\n      history: [{\n        pixels: Array(n_rows * n_cols).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([{\n        squares: squares\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 == 0\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.jumpTo(move),\n          children: desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, move, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this);\n    });\n    let status;\n\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {\n          squares: current.squares,\n          onClick: i => this.handleClick(i)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          children: moves\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n} // ========================================\n\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 195,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"sources":["/Users/neythen/Desktop/Projects/LED_paint/src/index.js"],"names":["React","ReactDOM","range","start","stop","step","result","i","push","Square","props","onClick","value","Board","Component","renderSquare","row","col","pixels","renderRow","n_cols","indices","map","renderRows","n_rows","row_indices","Array","fill","render","Game","constructor","state","history","stepNumber","xIsNext","handleClick","slice","current","length","squares","calculateWinner","setState","concat","jumpTo","winner","moves","move","desc","status","lines","a","b","c","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\nfunction range(start, stop, step) {\n    if (typeof stop == 'undefined') {\n        // one param defined\n        stop = start;\n        start = 0;\n    }\n\n    if (typeof step == 'undefined') {\n        step = 1;\n    }\n\n    if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n        return [];\n    }\n\n    var result = [];\n    for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n        result.push(i);\n    }\n\n    return result;\n};\n\nfunction Square(props) {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n\n  renderSquare = (row, col) => {\n    return (\n      <Square\n        value={this.props.pixels[row][col]}\n        onClick={() => this.props.onClick(row, col)}\n      />\n    );\n  }\n\n  renderRow = (n_cols) => {\n    var indices = range(0, n_cols);\n\n    return (\n      <div className=\"board-row\">\n        {indices.map(this.renderSquare)}\n      </div>\n    )\n\n  }\n\n\n  renderRows(n_rows, n_cols) {\n    var row_indices = new Array(n_rows).fill(n_cols);\n\n    return row_indices.map(this.renderRow);\n\n  }\n\n  render() {\n\n    let n_rows = 7;\n    let n_cols = 10;\n    return (\n      this.renderRows(n_rows, n_cols)\n\n\n      /*\n      <div>\n        <div className=\"board-row\">\n          {this.renderRow(0,10)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderRow(0,10)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderRow(0,10)}\n        </div>\n      </div>\n      */\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    let n_rows = 7;\n    let n_cols = 10;\n    this.state = {\n      history: [{\n        pixels: Array(n_rows * n_cols).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? \"X\" : \"O\";\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  jumpTo(step){\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step%2) == 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n        return (\n          <li key={move}>\n            <button onClick={() => this.jumpTo(move)}>{desc}</button>\n          </li>\n        );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"]},"metadata":{},"sourceType":"module"}